{"version":3,"sources":["Coin.js","DarkSwitch.js","App.js","index.js"],"names":["Coin","name","price","symbol","marketcap","volume","image","priceChange","className","src","alt","toLocaleString","toFixed","DarkSwitch","useState","dark","setDark","useEffect","document","documentElement","setAttribute","size","htmlFor","type","id","onChange","event","target","checked","handleChange","defaultChecked","App","coins","setCoins","search","setSearch","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","coin","toLowerCase","includes","e","value","placeholder","map","key","current_price","total_volume","market_cap","price_change_percentage_24h","ReactDOM","render","StrictMode","getElementById"],"mappings":"yQAuCeA,G,YApCF,SAAC,GAQP,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MACAC,EAKI,EALJA,OACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,MACAC,EACI,EADJA,YAEA,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKC,IAAKH,EAAOI,IAAI,WACrB,4BAAKT,GACL,uBAAGO,UAAU,eAAeL,IAE9B,yBAAKK,UAAU,aACb,uBAAGA,UAAU,cAAb,IAA4BN,GAC5B,uBAAGM,UAAU,eAAb,IAA6BH,EAAOM,kBAEnCJ,EAAc,EACb,uBAAGC,UAAU,oBAAoBD,EAAYK,QAAQ,GAArD,KAEA,uBAAGJ,UAAU,sBAAsBD,EAAYK,QAAQ,GAAvD,KAGF,uBAAGJ,UAAU,kBAAb,aACaJ,EAAUO,uB,OCIlBE,EAhCI,WAAM,MAECC,oBAAS,GAFV,mBAEhBC,EAFgB,KAEVC,EAFU,KAgBvB,OANAC,qBAAU,YACC,IAATF,EACIG,SAASC,gBAAgBC,aAAa,aAAc,QACpDF,SAASC,gBAAgBC,aAAa,aAAc,WACvD,CAACL,IAGF,yBAAKP,UAAU,wBACZO,EAAO,kBAAC,IAAD,CAAOM,KAAK,SAAY,kBAAC,IAAD,CAAQA,KAAK,SAC7C,2BAAOb,UAAU,eAAec,QAAQ,YACtC,2BACEC,KAAK,WACLC,GAAG,WACHC,SAAU,SAACC,GAAD,OAlBG,SAACA,GACpBA,EAAMC,OAAOC,QAAUZ,GAAQ,GAAQA,GAAQ,GAiBpBa,CAAaH,IAClCI,gBAAc,IAEhB,yBAAKtB,UAAU,oBCgCRuB,MAvDf,WAAgB,IAAD,EACajB,mBAAS,IADtB,mBACNkB,EADM,KACCC,EADD,OAEenB,mBAAS,IAFxB,mBAENoB,EAFM,KAEEC,EAFF,KAIblB,qBAAU,WACRmB,IACGC,IACC,4HAEDC,MAAK,SAACC,GACLN,EAASM,EAAIC,SAEdC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,IAEH,IAIMG,EAAgBb,EAAMc,QAAO,SAACC,GAAD,OACjCA,EAAK9C,KAAK+C,cAAcC,SAASf,EAAOc,kBAG1C,OACE,yBAAKxC,UAAU,sBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,eACb,wBAAIA,UAAU,aAAd,kBACA,8BACE,2BACEA,UAAU,aACVe,KAAK,OACLE,SAjBW,SAACyB,GACpBf,EAAUe,EAAEvB,OAAOwB,QAiBXC,YAAY,aAIjBP,EAAcQ,KAAI,SAACN,GAClB,OACE,kBAAC,EAAD,CACEO,IAAKP,EAAKvB,GACVvB,KAAM8C,EAAK9C,KACXC,MAAO6C,EAAKQ,cACZpD,OAAQ4C,EAAK5C,OACbC,UAAW2C,EAAKS,aAChBnD,OAAQ0C,EAAKU,WACbnD,MAAOyC,EAAKzC,MACZC,YAAawC,EAAKW,mCCjD9BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3C,SAAS4C,eAAe,W","file":"static/js/main.863c2bd9.chunk.js","sourcesContent":["import React from 'react'\nimport './Coin.css'\n\nconst Coin = ({\n  name,\n  price,\n  symbol,\n  marketcap,\n  volume,\n  image,\n  priceChange,\n}) => {\n  return (\n    <div className='coin-container'>\n      <div className='coin-row'>\n        <div className='coin'>\n          <img src={image} alt='crypto' />\n          <h1>{name}</h1>\n          <p className='coin-symbol'>{symbol}</p>\n        </div>\n        <div className='coin-data'>\n          <p className='coin-price'>${price}</p>\n          <p className='coin-volume'>${volume.toLocaleString()}</p>\n\n          {priceChange < 0 ? (\n            <p className='coin-percent red'>{priceChange.toFixed(2)}%</p>\n          ) : (\n            <p className='coin-percent green'>{priceChange.toFixed(2)}%</p>\n          )}\n\n          <p className='coin-marketcap'>\n            Mkt Cap: ${marketcap.toLocaleString()}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Coin\n","import React, { useEffect, useState } from 'react'\nimport { BsMoon, BsSun } from 'react-icons/bs'\n\nconst DarkSwitch = () => {\n  // init dark state\n  const [dark, setDark] = useState(true)\n\n  // toggle dark and save preference\n  const handleChange = (event) => {\n    event.target.checked ? setDark(true) : setDark(false)\n  }\n\n  // on dark change, set document data-theme\n  useEffect(() => {\n    dark === true\n      ? document.documentElement.setAttribute('data-theme', 'dark')\n      : document.documentElement.setAttribute('data-theme', 'light')\n  }, [dark])\n\n  return (\n    <div className='theme-switch-wrapper'>\n      {dark ? <BsSun size='24px' /> : <BsMoon size='24px' />}\n      <label className='theme-switch' htmlFor='checkbox'>\n        <input\n          type='checkbox'\n          id='checkbox'\n          onChange={(event) => handleChange(event)}\n          defaultChecked\n        />\n        <div className='slider round'></div>\n      </label>\n    </div>\n  )\n}\n\nexport default DarkSwitch\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './App.css'\nimport Coin from './Coin'\nimport DarkSwitch from './DarkSwitch'\n\nfunction App() {\n  const [coins, setCoins] = useState([])\n  const [search, setSearch] = useState('')\n\n  useEffect(() => {\n    axios\n      .get(\n        'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false'\n      )\n      .then((res) => {\n        setCoins(res.data)\n      })\n      .catch((error) => console.log(error))\n  }, [])\n\n  const handleChange = (e) => {\n    setSearch(e.target.value)\n  }\n\n  const filteredCoins = coins.filter((coin) =>\n    coin.name.toLowerCase().includes(search.toLowerCase())\n  )\n\n  return (\n    <div className='coin-app dark-mode'>\n      <DarkSwitch />\n      <div className='coin-search'>\n        <h1 className='coin-text'>Crypto Tracker</h1>\n        <form>\n          <input\n            className='coin-input'\n            type='text'\n            onChange={handleChange}\n            placeholder='Search'\n          />\n        </form>\n      </div>\n      {filteredCoins.map((coin) => {\n        return (\n          <Coin\n            key={coin.id}\n            name={coin.name}\n            price={coin.current_price}\n            symbol={coin.symbol}\n            marketcap={coin.total_volume}\n            volume={coin.market_cap}\n            image={coin.image}\n            priceChange={coin.price_change_percentage_24h}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}